apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-onboard-backend
  labels:
    app: user-onboard
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-onboard
      component: backend
  template:
    metadata:
      labels:
        app: user-onboard
        component: backend
    spec:
      serviceAccountName: user-onboard
      securityContext:
        fsGroup: 1001
      containers:
      - name: backend
        image: ghcr.io/your-org/user-onboard-backend:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        # Database Configuration - Agnostic for MSSQL/Oracle
        - name: DB_TYPE
          value: "mssql"  # Change to "oracle" when using Oracle
        - name: JDBC_URL
          valueFrom:
            secretKeyRef:
              name: user-onboard-db-secret
              key: jdbc-url
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: user-onboard-db-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-onboard-db-secret
              key: password
        - name: HIBERNATE_DIALECT
          value: "org.hibernate.dialect.SQLServerDialect"  # Change for Oracle: org.hibernate.dialect.Oracle12cDialect
        
        # JWT Configuration
        - name: JWT_PRIVATE_KEY_PATH
          value: "/var/secrets/jwt/private_key.pem"
        - name: JWT_PUBLIC_KEY_PATH
          value: "/var/secrets/jwt/public_key.pem"
        
        # RabbitMQ Configuration
        - name: RABBITMQ_HOST
          value: "user-onboard-rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USERNAME
          value: "guest"
        - name: RABBITMQ_PASSWORD
          value: "guest"
        
        # Application Configuration
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: EMAIL_ENABLED
          value: "true"
        
        volumeMounts:
        - name: jwt-keys
          mountPath: /var/secrets/jwt
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      
      volumes:
      - name: jwt-keys
        secret:
          secretName: user-onboard-jwt-secret
          defaultMode: 0400
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-onboard-frontend
  labels:
    app: user-onboard
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-onboard
      component: frontend
  template:
    metadata:
      labels:
        app: user-onboard
        component: frontend
    spec:
      serviceAccountName: user-onboard
      securityContext:
        fsGroup: 1001
      containers:
      - name: frontend
        image: ghcr.io/your-org/user-onboard-frontend:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: VITE_API_URL
          value: "http://user-onboard-backend:8080"
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true

