apiVersion: v1
kind: Secret
metadata:
  name: user-onboard-db-secret
  labels:
    app: user-onboard
    component: database
type: Opaque
data:
  # TODO: Replace with actual base64 encoded credentials
  # For MSSQL: username should be your SQL Server username
  # For Oracle: username should be your Oracle database username
  # Use: echo -n 'your-username' | base64
  username: "" # TODO: Add base64 encoded database username
  
  # TODO: Replace with actual base64 encoded password
  # Use: echo -n 'your-password' | base64
  password: "" # TODO: Add base64 encoded database password
  
  # TODO: Replace with actual JDBC URL based on database type
  # MSSQL format: jdbc:sqlserver://your-server:1433;database=useronboard;encrypt=true
  # Oracle format: jdbc:oracle:thin:@your-server:1521/servicename
  jdbc-url: "" # TODO: Add base64 encoded JDBC URL

---
apiVersion: v1
kind: Secret
metadata:
  name: user-onboard-jwt-secret
  labels:
    app: user-onboard
    component: backend
type: Opaque
data:
  # TODO: Replace with actual JWT RSA keys (base64 encoded)
  # Generate keys with:
  # openssl genrsa -out private_key.pem 2048
  # openssl rsa -in private_key.pem -pubout -out public_key.pem
  # cat private_key.pem | base64 -w 0
  # cat public_key.pem | base64 -w 0
  private_key.pem: "" # TODO: Add base64 encoded private key
  public_key.pem: "" # TODO: Add base64 encoded public key

---
apiVersion: v1
kind: Secret
metadata:
  name: user-onboard-rabbitmq-secret
  labels:
    app: user-onboard
    component: rabbitmq
type: Opaque
data:
  # TODO: Replace with actual RabbitMQ credentials (base64 encoded)
  username: Z3Vlc3Q= # guest (base64)
  password: Z3Vlc3Q= # guest (base64)
